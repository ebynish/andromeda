version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    hostname: postgres_db
    environment:
      POSTGRES_DB: andromeda_db
      POSTGRES_USER: andromeda_user
      POSTGRES_PASSWORD: andromeda_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - andromeda

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: andromeda_db
      DB_USER: andromeda_user
      DB_PASSWORD: andromeda_pass
      KC_HOSTNAME: dkrrs.net
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - andromeda

  andromeda:
    build:
      context: https://github.com/ebynish/andromeda-app.git
    container_name: andromeda
    environment:
      DATABASE_URL: postgresql://andromeda_user:andromeda_pass@postgres:5432/andromeda_db
    volumes:
      - static:/var/andromeda/static/
      - media:/var/andromeda/media/
    depends_on:
      - postgres
      - keycloak
    networks:
      - andromeda
    ports:
      - "5000:5000"
    restart: unless-stopped
    entrypoint: /bin/sh -c "bash /app/create_superuser.sh && flask run --host=0.0.0.0 --port=5000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/default.conf:/etc/nginx/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static:/var/andromeda/static/
      - media:/var/andromeda/media/
    depends_on:
      - andromeda
      - keycloak
    networks:
      - andromeda

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static:
  media:

networks:
  andromeda:
